#!/bin/bash
#------------------------------------------------------------------------------
# Copyright (c) Perforce Software, Inc., 2007-2015. All rights reserved
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# 1  Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# 2.  Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
# FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL PERFORCE
# SOFTWARE, INC. BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
# ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
# TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF
# THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH
# DAMAGE.
#------------------------------------------------------------------------------
set -u

# p4login generates a login ticket for the SDP super user.  It is called
# from cron scripts, and so does not normally generate output to stdout or
# stderr.
#
# Normally output (stdout and stderr) is logged in $LOGS/p4login.log,
# unless unless SDP_INSTANCE isn't defined, in which case it bails
# immediately.
#
# An exit code of 0 indicates a valid login ticket exists, while a
# non-zero exit code indicates a failure to login.

export SDP_INSTANCE=${SDP_INSTANCE:-Undefined}
declare -i SDP_ALWAYS_LOGIN=${SDP_ALWAYS_LOGIN:-1}
declare DateFormat='%a %Y-%m-%d %H:%M:%S %Z'
declare Cmd=

function bail () { echo -e "\nError: ${1:-Unknown Error}"; exit ${2:-1}; }

[[ $SDP_INSTANCE == Undefined ]] && bail "Error: SDP_INSTANCE not defined."

declare TicketExpiration=$($P4BIN -ztag -F %TicketExpiration% -p $P4PORT -u $P4USER login -s 2>/dev/null)
declare Log=$LOGS/p4login.log
echo "$(date +'%a %Y-%m-%d %H:%M:%S %Z'): Checking login status." > $Log

if [[ $TicketExpiration =~ [0-9]+ ]]; then
   # A 'long-term' ticket is one that expires more than a month (31 days + 1 second) from now.
   if [[ $TicketExpiration -ge 2678401 ]]; then
      echo "$(date +'%a %Y-%m-%d %H:%M:%S %Z'): Verified: User $P4USER logged into $P4PORT with a long-term ticket.  Login not required." >> $Log

      if [[ $SDP_ALWAYS_LOGIN -eq 1 ]]; then
         echo "Doing login anyway as SDP_ALWAYS_LOGIN is enabled." >> $Log
         Cmd="$P4BIN -p $P4PORT -u $P4USER -s login -a"
         echo Running: $Cmd >> $Log
         $Cmd < /p4/common/bin/adminpass >> $Log 2>&1
      fi

      exit 0
   else
      echo "$(date +'%a %Y-%m-%d %H:%M:%S %Z'): Warning: User $P4USER logged into $P4PORT with a short-term ticket.  Attempting to extend." >> $Log
      Cmd="$P4BIN -p $P4PORT -u $P4USER -s login -a"
      echo Running: $Cmd >> $ Log
      $Cmd < /p4/common/bin/adminpass >> $Log 2>&1
      exit $?
   fi
else
   echo "$(date +'%a %Y-%m-%d %H:%M:%S %Z'): Warning: User $P4USER is not logged into $P4PORT.  Attempting to login." >> $Log
   Cmd="$P4BIN -p $P4PORT -u $P4USER -s login -a"
   echo Running: $Cmd >> $Log
   $Cmd < /p4/common/bin/adminpass >> $Log 2>&1
   exit $?
fi
