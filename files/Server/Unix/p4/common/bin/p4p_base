#!/bin/bash
#------------------------------------------------------------------------------
# Copyright (c) Perforce Software, Inc., 2007-2015. All rights reserved
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# 1  Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# 2.  Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
# FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL PERFORCE
# SOFTWARE, INC. BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
# ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
# TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF
# THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH
# DAMAGE.
#------------------------------------------------------------------------------

#
# Perforce proxy base init script

# do nothing unless $SDP_INSTANCE is defined.
if [[ -z $SDP_INSTANCE ]]; then
   echo $SDP_INSTANCE
   echo "SDP_INSTANCE is invalid."
   exit 1
fi

if [[ `$ID -u` = 0 ]]; then
   exec su - $OSUSER -c "$0 $1"
elif [ "`$ID -u -n`" != $OSUSER ]; then
   echo "$0 can only be run by root or $OSUSER"
   exit 1
fi

# Souce in get_pids().
source $P4CBIN/ps_functions.sh || exit 1

# Add and override values from p4_vars
export P4LOG=$LOGS/p4p.log
export P4P_FLAGS="-d -p $PROXY_PORT -r $P4PCACHE -t $PROXY_TARGET -e 3072 -L $P4LOG"

case "$1" in
   start)
      echo "Starting ${P4PBIN} ${P4P_FLAGS}"
      ${P4PBIN} ${P4P_FLAGS}
   ;;

   status)
      p4p_pids=$(get_pids "$P4PBIN")
      if [[ -n "$p4p_pids" ]]; then
         echo "${P4PBIN} is running as pids: $p4p_pids."
         exit 0
      else
         echo "${P4PBIN} is NOT running."
         exit 1
      fi
   ;;

   stop)
      p4p_pids=$(get_pids "$P4PBIN")

      if [[ -n "$p4p_pids" ]]; then
         while [[ -n "$p4p_pids" ]]; do
            echo "Shutting down ${P4PBIN} pids: $p4p_pids."
            kill $p4p_pids 2>&1 | $GREP -v -i "No such"
            sleep 1
            p4p_pids=$(get_pids "$P4PBIN")
         done
         echo "${P4PBIN} stopped."
         exit 0
      else
         echo "${P4PBIN} was NOT running."
         exit 1
      fi
   ;;
   restart)
      $0 stop
      $0 start
   ;;
   *)
      echo "Usage: $0 {start|stop|status|restart}"
      exit 1
   ;;
esac
